{"version":3,"file":"static/js/92.17e9bd13.chunk.js","mappings":"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","sources":["pages/Contact.jsx"],"sourcesContent":["/**\r\n * Contact Page\r\n */\r\n\r\n// Dependencies\r\nimport React, { useMemo, memo } from 'react';\r\nimport { useForm, ValidationError } from '@formspree/react';\r\nimport config from '../config';\r\n\r\n// MUI\r\nimport { Box, styled, Typography, Divider, TextField, Button, Paper, Tooltip, Link } from '@mui/material';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport InstagramIcon from '@mui/icons-material/Instagram';\r\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\r\nimport YouTubeIcon from '@mui/icons-material/YouTube';\r\nimport TwitterIcon from '@mui/icons-material/Twitter';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\n\r\n// Custom\r\nimport ContactGif from '../assets/contact.gif'\r\n\r\nconst Contact = () => {\r\n    const [submit, handleSubmit] = useForm(config.FORMSPREEE_CONTACT_FORM_ID);\r\n\r\n    const socialLinks = useMemo(() => [\r\n        {\r\n            name: `Email: ${config.CONTACT.email}`,\r\n            url: `mailto:${config.CONTACT.email}`,\r\n            icon: <EmailIcon sx={{ '&:hover': { color: '#ff0f00 !important' } }} />\r\n        },\r\n        {\r\n            name: 'Instagram',\r\n            url: config.CONTACT.instagram,\r\n            icon: <InstagramIcon sx={{ '&:hover': { color: '#C13584 !important' } }} />\r\n        },\r\n        {\r\n            name: 'LinkedIn',\r\n            url: config.CONTACT.linkedIn,\r\n            icon: <LinkedInIcon sx={{ '&:hover': { color: '#1DA1F2 !important' } }} />,\r\n        },\r\n        {\r\n            name: 'Twitter',\r\n            url: config.CONTACT.twitter,\r\n            icon: <TwitterIcon sx={{ '&:hover': { color: '#1DA1F2 !important' } }} />\r\n        },\r\n        {\r\n            name: 'GitHub',\r\n            url: config.CONTACT.github,\r\n            icon: <GitHubIcon />\r\n        },\r\n        {\r\n            name: 'YouTube',\r\n            url: config.CONTACT.youtube,\r\n            icon: <YouTubeIcon sx={{ '&:hover': { color: '#ff0000 !important' } }} />\r\n        }\r\n    ], []);\r\n\r\n    const LinkItem = ({ name, icon, url }) => {\r\n        return (\r\n            <Tooltip title={name}>\r\n                <LinkPaper>\r\n                    <Link href={url} target=\"_blank\">\r\n                        {icon}\r\n                    </Link>\r\n                </LinkPaper>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Main>\r\n            <Typography variant='h1' fontSize='4rem'>Contact</Typography>\r\n            <Divider />\r\n            <Content>\r\n                <Animation\r\n                    display={{ xs: 'none', md: 'block' }}\r\n                >\r\n                    <img\r\n                        src={ContactGif}\r\n                        alt='Contact gif'\r\n                        width='100%'\r\n                        height='100%'\r\n                        style={{\r\n                            backgroundColor: 'transparent',\r\n                        }}\r\n                    />\r\n                </Animation>\r\n                <ContactForm\r\n                    width={{ xs: '100%', md: '35%' }}\r\n                >\r\n                    <Typography variant='body1'>If you have some changes that will improve the quality of this project, or this website. Feel free to contact me by filling the form below. I'll reach out to you ASAP!</Typography>\r\n                    {submit.succeeded ? (\r\n                        <Box>\r\n                            <Divider sx={{ my: 2 }} />\r\n                            <Typography variant='body1' fontSize='1.5rem'>Thanks for sending me a message! I'll get back to you ASAP!</Typography>\r\n                            <Divider sx={{ my: 2 }} />\r\n                        </Box>\r\n                    ) : (\r\n                        <Form\r\n                            component='form'\r\n                            onSubmit={handleSubmit}\r\n                        >\r\n                            <TextField\r\n                                type='text'\r\n                                variant='outlined'\r\n                                placeholder='eg: John Doe'\r\n                                name='name'\r\n                                id='name'\r\n                                label='Name'\r\n                                fullWidth\r\n                                required\r\n                            />\r\n                            <TextField\r\n                                type='email'\r\n                                variant='outlined'\r\n                                placeholder='eg: john.doe@gmail.com'\r\n                                name='email'\r\n                                id='email'\r\n                                label='Email'\r\n                                fullWidth\r\n                                required\r\n                            />\r\n                            <TextField\r\n                                type='text'\r\n                                variant='outlined'\r\n                                placeholder='eg: Improve site navbar!'\r\n                                name='message'\r\n                                id='message'\r\n                                label='Your Message'\r\n                                multiline\r\n                                fullWidth\r\n                                required\r\n                            />\r\n                            <ValidationError\r\n                                prefix=\"Message\"\r\n                                field=\"message\"\r\n                                errors={submit.errors}\r\n                            />\r\n                            <SubmitButton type='submit'>Send Message</SubmitButton>\r\n                        </Form>\r\n                    )}\r\n                    <Typography variant='body1'>Alternatively, contact me through any of the links below.</Typography>\r\n                    <LinksContainer>\r\n                        {socialLinks.map((link, index) => (\r\n                            <LinkItem\r\n                                key={index}\r\n                                {...link}\r\n                            />\r\n                        ))}\r\n                    </LinksContainer>\r\n                </ContactForm>\r\n            </Content>\r\n        </Main>\r\n    )\r\n};\r\n\r\nconst Main = styled(Box)({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    '> *': {\r\n        width: '100%',\r\n    }\r\n});\r\n\r\nconst Content = styled(Box)({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around',\r\n    marginTop: '1em',\r\n});\r\n\r\nconst Animation = styled(Box)({\r\n    aspectRatio: '1 / 1',\r\n    width: '65%',\r\n    maxHeight: '560px',\r\n    overflow: 'hidden',\r\n    display: 'flex',\r\n});\r\n\r\nconst ContactForm = styled(Box)({\r\n    padding: '1em',\r\n    width: '35%',\r\n    background: 'rgba( 255, 255, 255, 0.4 )',\r\n    backdropFilter: 'blur(4px)',\r\n    webkitBackdropFilter: 'blur(4px)',\r\n    borderRadius: '8px',\r\n    marginTop: '1em',\r\n});\r\n\r\nconst Form = styled(Box)({\r\n    width: '100%',\r\n    padding: '0.5em 1.5em 0.5em 0',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '1em',\r\n});\r\n\r\nconst SubmitButton = styled(Button)({\r\n    backgroundColor: `${config.APP_COLORS.accent}90`,\r\n    color: config.APP_COLORS.darkAccent,\r\n    '&:hover': {\r\n        backgroundColor: config.APP_COLORS.accent,\r\n        color: config.APP_COLORS.dark,\r\n    }\r\n});\r\n\r\nconst LinksContainer = styled(Box)({\r\n    marginTop: '1em',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    gap: '1.5em',\r\n});\r\n\r\nconst LinkPaper = styled(Paper)({\r\n    padding: '0.5em',\r\n    cursor: 'pointer',\r\n    transition: 'all 200ms',\r\n    '&:hover': {\r\n        backgroundColor: config.APP_COLORS.accent,\r\n    },\r\n    'a': {\r\n        all: 'unset',\r\n    }\r\n});\r\n\r\n\r\nexport default memo(Contact);"],"names":["Contact","useForm","config","submit","handleSubmit","socialLinks","useMemo","name","url","icon","Email","sx","color","Instagram","LinkedIn","Twitter","GitHub","YouTube","LinkItem","Tooltip","title","LinkPaper","Link","href","target","Main","Typography","variant","fontSize","Divider","Content","Animation","display","xs","md","src","ContactGif","alt","width","height","style","backgroundColor","ContactForm","succeeded","Box","my","Form","component","onSubmit","TextField","type","placeholder","id","label","fullWidth","required","multiline","prefix","field","errors","SubmitButton","LinksContainer","map","link","index","styled","flexDirection","alignItems","justifyContent","marginTop","aspectRatio","maxHeight","overflow","padding","background","backdropFilter","webkitBackdropFilter","borderRadius","gap","Button","Paper","cursor","transition","all","memo"],"sourceRoot":""}