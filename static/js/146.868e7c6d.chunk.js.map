{"version":3,"file":"static/js/146.868e7c6d.chunk.js","mappings":"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","sources":["pages/ContributeRequests.jsx","utils/axios.js"],"sourcesContent":["/**\r\n * Contribute Requests Page\r\n */\r\n\r\n// Dependencies\r\nimport React, { useEffect, useState } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { format } from 'date-fns';\r\nimport config from '../config';\r\n\r\n// MUI\r\nimport { Typography, Box, styled, Divider, Grid, Paper, Stack, Chip, Tooltip, Button } from '@mui/material';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\n\r\n// Custom\r\nimport { fetchProjectIssuesList } from '../utils/axios';\r\n\r\nconst ContributeRequests = () => {\r\n    const [issues, setIssues] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const handleFetchIssues = async () => {\r\n            const data = await fetchProjectIssuesList();\r\n            setIssues(data);\r\n        }\r\n        handleFetchIssues();\r\n    }, []);\r\n\r\n    const GitHubIssueCard = ({ title, body, state, updatedAt, createdAt, labels, url }) => {\r\n\r\n        const handleNavigateToIssue = () => {\r\n            window.open(url, '_blank');\r\n        }\r\n\r\n        return (\r\n            <Grid item xs={12} md={4} m={2}>\r\n                <Card >\r\n                    <Typography variant='h6'><GitHubIcon /> {title} - <Chip label={state} variant='outlined' color='success' sx={{ transform: 'scale(0.8)' }} /></Typography>\r\n                    <Divider />\r\n                    <Typography p={2} sx={{\r\n                        'img': {\r\n                            width: '100%',\r\n                        }\r\n                    }}>\r\n                        <ReactMarkdown>{body}</ReactMarkdown>\r\n                    </Typography>\r\n                    <GitHubButton\r\n                        startIcon={<GitHubIcon />}\r\n                        onClick={handleNavigateToIssue}\r\n                    >View Issue in GitHub</GitHubButton>\r\n                    <Divider />\r\n                    {labels.length > 0 && labels.map((label) => (\r\n                        <Tooltip\r\n                            title={label.description}\r\n                        >\r\n                            <Chip\r\n                                label={label.name}\r\n                                sx={{\r\n                                    cursor: 'pointer',\r\n                                    backgroundColor: `#${label.color}`,\r\n                                    margin: '0.5em 0.25em',\r\n                                }}\r\n                            />\r\n                        </Tooltip>\r\n                    ))}\r\n                    <Divider />\r\n                    <Stack direction='row' spacing={2} mt={1}>\r\n                        <p><b>Created At</b>: {format(new Date(createdAt), 'PPP')}</p>\r\n                        <p><b>Updated At</b>: {format(new Date(updatedAt), 'PPP')}</p>\r\n                    </Stack>\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Main>\r\n            <Typography variant='h1' fontSize='4rem'>Contribution Requests</Typography>\r\n            <Divider />\r\n            {issues.length > 0 ?\r\n                <CardsContainer\r\n                    container\r\n                    spacing={2}\r\n                    gap={2}\r\n                    justifyContent='center'\r\n                >\r\n                    {\r\n                        issues.map((issue, index) => (\r\n                            <GitHubIssueCard {...issue} key={index} />\r\n                        ))\r\n                    }\r\n                </CardsContainer> :\r\n                <Typography>No issues available right now! ðŸ¥³ðŸ™Œ</Typography>\r\n            }\r\n        </Main >\r\n    )\r\n}\r\n\r\nconst Main = styled(Box)({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    '> *': {\r\n        width: '100%',\r\n    }\r\n});\r\n\r\nconst CardsContainer = styled(Grid)({\r\n    marginTop: '1em',\r\n    width: '100%',\r\n});\r\n\r\nconst Card = styled(Paper)({\r\n    padding: '1em 0.75em',\r\n    height: '100%'\r\n});\r\n\r\nconst GitHubButton = styled(Button)({\r\n    backgroundColor: config.APP_COLORS.accent,\r\n    color: config.APP_COLORS.darkAccent,\r\n    width: '100%',\r\n    marginBottom: '1em',\r\n    '&:hover': {\r\n        backgroundColor: config.APP_COLORS.accent,\r\n        color: config.APP_COLORS.dark,\r\n    }\r\n})\r\n\r\nexport default ContributeRequests;","/**\r\n * Axios Configuration\r\n */\r\n\r\n// Dependencies\r\nimport axios from \"axios\";\r\nimport config from \"../config\";\r\n\r\nexport const fetchProjectContributorsList = async () => {\r\n    try {\r\n        let contributors = sessionStorage.getItem('contributors') ? JSON.parse(sessionStorage.getItem('contributors')) : null;\r\n        if (!contributors) {\r\n            const response = await axios.get(config.CONTRIBUTORS_URL);\r\n            contributors = response.data.map((account) => {\r\n                return {\r\n                    username: account.login,\r\n                    avatar: account.avatar_url,\r\n                    profile: account.html_url,\r\n                    contributions: account.contributions,\r\n                }\r\n            });\r\n            sessionStorage.setItem('contributors', JSON.stringify(contributors));\r\n        }\r\n        return contributors;\r\n    } catch (error) {\r\n        return [];\r\n    }\r\n};\r\n\r\nexport const fetchProjectIssuesList = async () => {\r\n    try {\r\n        let issues = sessionStorage.getItem('issues') ? JSON.parse(sessionStorage.getItem('issues')) : null;\r\n        if (!issues) {\r\n            const response = await axios.get(config.ISSUES_URL);\r\n            issues = response.data.map((issue) => {\r\n                return {\r\n                    url: issue.html_url,\r\n                    state: issue.state,\r\n                    title: issue.title,\r\n                    body: issue.body,\r\n                    labels: issue.labels,\r\n                    createdAt: issue.created_at,\r\n                    updatedAt: issue.updated_at,\r\n                }\r\n            });\r\n            sessionStorage.setItem('issues', JSON.stringify(issues));\r\n        };\r\n        return issues;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return [];\r\n    }\r\n}"],"names":["Main","styled","Box","display","flexDirection","alignItems","justifyContent","width","CardsContainer","Grid","marginTop","Card","Paper","padding","height","GitHubButton","Button","backgroundColor","config","color","marginBottom","useState","issues","setIssues","useEffect","handleFetchIssues","fetchProjectIssuesList","data","GitHubIssueCard","title","body","state","updatedAt","createdAt","labels","url","item","xs","md","m","variant","label","sx","transform","p","startIcon","onClick","window","open","length","map","description","name","cursor","margin","direction","spacing","mt","format","Date","fontSize","container","gap","issue","index","key","fetchProjectContributorsList","contributors","sessionStorage","getItem","JSON","parse","axios","response","account","username","login","avatar","avatar_url","profile","html_url","contributions","setItem","stringify","created_at","updated_at","console","log"],"sourceRoot":""}